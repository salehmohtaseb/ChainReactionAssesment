version: '3.7'
services:
  redis:
    image: 'redis:5.0.12-alpine'
    container_name: c-redis
    ports: 
      - "0.0.0.0:6379:6379"
    networks:
      - MyNetwork1
    expose:
      - 6379
  postgres:
    image: 'postgres:13.3'
    networks:
      - MyNetwork1
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '0.0.0.0:54321:5432'
    expose:
      - 5432
    volumes:
      - db-data:/var/lib/postgresql/data
  chainreaction:
    build: .   
    networks:
      - MyNetwork1
    container_name: cReaction
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    ports:
      - 3001:3001
    volumes:
      - type: bind
        source: ./
        target: /app
      - type: volume
        source: nodemodules
        target: /app/node_modules
        volume:
          nocopy: true
    working_dir: /app
    command: bash -c "npm run db:migrate && npm run db:seed && npm run start"
  
networks:
  MyNetwork1:

volumes:
  db-data:
  nodemodules:  